import java.util.*;
class knapsack {
    
    public static int knapRec(int wt[], int val[], int n, int w) {
        int  t[][]=new int[100][100] ;
    for (int[] row: t)
    Arrays.fill(row, -1);
        if (n <= 0 || w == 0 ) {
            return 0;
        }
        else if(t[n][w]!=-1)
        return t[n][w];
       else  if (wt[n - 1] > w) {
            return t[n][w]= knapRec(wt, val, n - 1, w);
        }

        else 
        return t[n][w]=Math.max(val[n - 1] + knapRec(wt, val, n - 1, w - wt[n - 1]), knapRec(wt, val, n - 1, w));

    }

    public static void main(String[] args) {
        int n, w;
        Scanner sc = new Scanner(System.in);

        n = 6;
        w = 10;
        int[] val = { 20, 5, 10, 40, 15, 25 };
        int[] wt = { 1, 2, 3, 8, 7, 4 };
       
        
        System.out.println(knapRec(wt, val, n, w));
    }

}
